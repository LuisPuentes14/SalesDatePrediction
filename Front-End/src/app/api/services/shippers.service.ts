/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiShippersAllShippersGet$Json } from '../fn/shippers/api-shippers-all-shippers-get-json';
import { ApiShippersAllShippersGet$Json$Params } from '../fn/shippers/api-shippers-all-shippers-get-json';
import { apiShippersAllShippersGet$Plain } from '../fn/shippers/api-shippers-all-shippers-get-plain';
import { ApiShippersAllShippersGet$Plain$Params } from '../fn/shippers/api-shippers-all-shippers-get-plain';
import { ShipperDto } from '../models/shipper-dto';

@Injectable({ providedIn: 'root' })
export class ShippersService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiShippersAllShippersGet()` */
  static readonly ApiShippersAllShippersGetPath = '/api/Shippers/AllShippers';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiShippersAllShippersGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiShippersAllShippersGet$Plain$Response(params?: ApiShippersAllShippersGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<ShipperDto>>> {
    return apiShippersAllShippersGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiShippersAllShippersGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiShippersAllShippersGet$Plain(params?: ApiShippersAllShippersGet$Plain$Params, context?: HttpContext): Observable<Array<ShipperDto>> {
    return this.apiShippersAllShippersGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<ShipperDto>>): Array<ShipperDto> => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiShippersAllShippersGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiShippersAllShippersGet$Json$Response(params?: ApiShippersAllShippersGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<ShipperDto>>> {
    return apiShippersAllShippersGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiShippersAllShippersGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiShippersAllShippersGet$Json(params?: ApiShippersAllShippersGet$Json$Params, context?: HttpContext): Observable<Array<ShipperDto>> {
    return this.apiShippersAllShippersGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<ShipperDto>>): Array<ShipperDto> => r.body)
    );
  }

}
